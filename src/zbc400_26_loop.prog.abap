*&---------------------------------------------------------------------*
*& Report ZBC400_26_LOOP
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZBC400_26_LOOP.




DATA: GT_CONNECTIONS TYPE STANDARD TABLE OF BC400_S_CONNECTION
      WITH NON-UNIQUE KEY CARRID CONNID,
      GS_CONNECTION LIKE LINE OF GT_CONNECTIONS.


DATA: GT_DATA TYPE ZYCONNECTION_26,
      GS_DATA LIKE LINE OF GT_DATA.






** BC400_TABLE_CONNECTIONS 테이블 타입의 GT_CONNECTIONS 테이블 생성
*DATA: GT_CONNECTIONS TYPE ZSW_T_CONNECTIONS,
** GT_CONNECTIONS가 가진 구조체(라인)을 기반으로 GS_CONNECTION 구조체 생성
*      GS_CONNECTION LIKE LINE OF GT_CONNECTIONS.




* 검색할 값을 받을 파라미터 선언
PARAMETERS PA_CARR TYPE BC400_S_CONNECTION-CARRID.


* 메서드 호출
*TRY.
*CALL METHOD CL_BC400_FLIGHTMODEL=>GET_CONNECTIONS
*  EXPORTING
*    IV_CARRID      = PA_CARR
*  IMPORTING
*    ET_CONNECTIONS = GT_CONNECTIONS
*    .
** 입력한 기반으로 찾는 데이터가 없을 시
* CATCH CX_BC400_NO_DATA .
*   MESSAGE '데이터가 없떠요' TYPE 'I'.
* CATCH CX_BC400_NO_AUTH .
*ENDTRY.


CALL METHOD ZCL_COMPUTE_26=>GET_CONNECTION
  IMPORTING
    ET_CONNECTIONS = GT_DATA
    .




*출력하기
LOOP AT GT_CONNECTIONS INTO GS_CONNECTION.
  WRITE:/ GS_CONNECTION-CARRID.
  WRITE GS_CONNECTION-CONNID.
  WRITE GS_CONNECTION-CITYFROM.
  WRITE GS_CONNECTION-AIRPFROM.
  WRITE GS_CONNECTION-CITYTO.
  WRITE GS_CONNECTION-AIRPTO.
  WRITE GS_CONNECTION-FLTIME.
  WRITE GS_CONNECTION-DEPTIME.
  WRITE GS_CONNECTION-ARRTIME.
  CLEAR GS_CONNECTION.
ENDLOOP.
